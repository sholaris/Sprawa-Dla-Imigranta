{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form } from \"react-bootstrap\";\n\nvar SectionA = function SectionA(_ref) {\n  var values = _ref.values,\n      errors = _ref.errors,\n      handleChange = _ref.handleChange;\n  return __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h3\", null, \"A. Dane osobowe cudzoziemca\")), __jsx(Col, {\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"1. Nazwisko\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.surname && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"surname\",\n    value: values.surname,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.surname && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.surname)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"2. Nazwisko(a) poprzednie\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousSurname1\",\n    value: values.previousSurname1,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousSurname2\",\n    value: values.previousSurname2,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"3. Nazwisko rodowe\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.familyName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"familyName\",\n    value: values.familyName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.familyName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.familyName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"4. Imi\\u0119 (imiona)\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.name1 && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"name1\",\n    value: values.name1,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.name1 && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.name1)), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"name2\",\n    value: values.name2,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"5. Imi\\u0119 (imiona) poprzednie\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousName1\",\n    value: values.previousName1,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousName2\",\n    value: values.previousName2,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"6. Imi\\u0119 ojca\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.fathersName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"fathersName\",\n    value: values.fathersName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.fathersName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.fathersName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"7. Imi\\u0119 matki\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.motherName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"mothersName\",\n    value: values.motherName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.motherName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.motherName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"8. Nazwisko rodowe matki\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.mothersMaidenName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"mothersMaidenName\",\n    value: values.mothersMaidenName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.mothersMaidenName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.mothersMaidenName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"9. Data urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 6,\n    lg: 3,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthDate && \"input-error\", \" \"),\n    type: \"date\",\n    name: \"birthDate\",\n    value: values.birthDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthDate)), __jsx(Form.Group, {\n    className: \"filed-title sex\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"10. P\\u0142e\\u0107\")), __jsx(Form.Group, {\n    className: \"sex\",\n    s: 12,\n    md: 6,\n    lg: 4,\n    as: Col\n  }, __jsx(Form.Check, {\n    id: \"Male\",\n    type: \"radio\",\n    label: \"M\\u0119\\u017Cczyzna\",\n    name: \"sex\",\n    value: \"M\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"sex\",\n    s: 12,\n    md: 6,\n    lg: 4,\n    as: Col\n  }, __jsx(Form.Check, {\n    id: \"Female\",\n    type: \"radio\",\n    label: \"Kobieta\",\n    name: \"sex\",\n    value: \"K\",\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.sex && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.sex)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"11. Miejsce urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthPlace && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"birthPlace\",\n    value: values.birthPlace,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthPlace && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthPlace)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"12. Pa\\u0144stwo urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthCountry && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"birthCountry\",\n    value: values.birthCountry,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthCountry && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthCountry)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"13. Narodowo\\u015B\\u0107\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.nationality && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"nationality\",\n    value: values.nationality,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.nationality && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.nationality)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"14. Obywatelstwo\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.citizenShip && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"citizenShip\",\n    value: values.citizenShip,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.citizenShip && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.citizenShip)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"15. Stan cywilny\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.maritalStatus && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"maritalStatus\",\n    value: values.maritalStatus,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.maritalStatus && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.maritalStatus)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"16. Wykszta\\u0142cenie\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.education && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"education\",\n    value: values.education,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.education && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.education)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"17. Zaw\\xF3d wykonywany\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.practisedProffesion && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"practisedProfession\",\n    value: values.practisedProffesion,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.practisedProffesion && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.practisedProffesion)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"18. Rysopis\")), __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    s: 8,\n    md: 4,\n    lg: 2,\n    as: Col\n  }, __jsx(Form.Label, null, \"Wzrost\")), __jsx(Form.Group, {\n    s: 8,\n    md: 4,\n    lg: 2,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.length && \"input-error\", \" \"),\n    type: \"text\",\n    maxLength: 3,\n    name: \"length\",\n    value: values.length,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.length && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.length)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    s: 8,\n    md: 4,\n    lg: 2,\n    as: Col\n  }, __jsx(Form.Label, null, \"Kolor oczu\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.eyesColour && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"eyesColour\",\n    value: values.eyesColour,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.eyesColour && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.eyesColour)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    s: 8,\n    md: 4,\n    lg: 2,\n    as: Col\n  }, __jsx(Form.Label, null, \"Znaki szczeg\\xF3lne\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.specialMarks && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"specialMarks\",\n    value: values.specialMarks,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.specialMarks && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.specialMarks))), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"19. Numer PESEL (je\\u015Bli zosta\\u0142 nadany)\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.pesel && \"input-error\", \" \"),\n    type: \"text\",\n    maxLength: 11,\n    name: \"pesel\",\n    value: values.pesel,\n    onChange: handleChange\n  }), errors.pesel && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.pesel)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"20. Numer telefonu\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    value: values.phoneNumber,\n    onChange: handleChange\n  })))));\n};\n\nexport default SectionA;","map":null,"metadata":{},"sourceType":"module"}