{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport remark from \"remark\";\nimport html from \"remark-html\";\nexport function getAllIssuesIds() {\n  var issuesDirectory = path.join(process.cwd(), \"issues\");\n  var foldersNames = fs.readdirSync(issuesDirectory);\n  var allFiles = [];\n  foldersNames.forEach(function (folder) {\n    var folderPath = path.join(issuesDirectory, folder);\n    var fileNames = fs.readdirSync(folderPath);\n    allFiles.concat(fileNames);\n  });\n  return allFiles.map(function (File) {\n    return {\n      params: {\n        id: File.replace(/\\.md$/, \"\")\n      }\n    };\n  });\n}\nexport function getIssueData(id) {\n  var issuesDirectory, foldersNames, fullPath, fileContents, matterResult, processedContent, contentHtml;\n  return _regeneratorRuntime.async(function getIssueData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          issuesDirectory = path.join(process.cwd(), \"issues\");\n          foldersNames = fs.readdirSync(issuesDirectory);\n          fullPath = \"\";\n          foldersNames.forEach(function (folder) {\n            var folderPath = path.join(issuesDirectory, folder);\n            var fileNames = fs.readdirSync(folderPath);\n            fileNames.forEach(function (file) {\n              if (file.replace(/\\.md$/, \"\") == id) {\n                fullPath = path.join(issuesDirectory, folder, \"\".concat(id, \".md\"));\n              }\n            });\n          });\n          fileContents = fs.readFileSync(fullPath, \"utf8\");\n          matterResult = matter(fileContents);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(remark().use(html).process(matterResult.content));\n\n        case 8:\n          processedContent = _context.sent;\n          contentHtml = processedContent.toString();\n          return _context.abrupt(\"return\", _objectSpread({\n            id: id,\n            contentHtml: contentHtml\n          }, matterResult.data));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/kamil/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/lib/issues.js"],"names":["fs","path","matter","remark","html","getAllIssuesIds","issuesDirectory","join","process","cwd","foldersNames","readdirSync","allFiles","forEach","folder","folderPath","fileNames","concat","map","File","params","id","replace","getIssueData","fullPath","file","fileContents","readFileSync","matterResult","use","content","processedContent","contentHtml","toString","data"],"mappings":";;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,MAAMC,eAAe,GAAGL,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAAxB;AACA,MAAMC,YAAY,GAAGV,EAAE,CAACW,WAAH,CAAeL,eAAf,CAArB;AACA,MAAIM,QAAQ,GAAG,EAAf;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqB,UAACC,MAAD,EAAY;AAC/B,QAAMC,UAAU,GAAGd,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,CAAnB;AACA,QAAME,SAAS,GAAGhB,EAAE,CAACW,WAAH,CAAeI,UAAf,CAAlB;AACAH,IAAAA,QAAQ,CAACK,MAAT,CAAgBD,SAAhB;AACD,GAJD;AAKA,SAAOJ,QAAQ,CAACM,GAAT,CAAa,UAACC,IAAD,EAAU;AAC5B,WAAO;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEF,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsB,EAAtB;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD;AAED,OAAO,SAAeC,YAAf,CAA4BF,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCf,UAAAA,eADD,GACmBL,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CADnB;AAECC,UAAAA,YAFD,GAEgBV,EAAE,CAACW,WAAH,CAAeL,eAAf,CAFhB;AAGDkB,UAAAA,QAHC,GAGU,EAHV;AAILd,UAAAA,YAAY,CAACG,OAAb,CAAqB,UAACC,MAAD,EAAY;AAC/B,gBAAMC,UAAU,GAAGd,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,CAAnB;AACA,gBAAME,SAAS,GAAGhB,EAAE,CAACW,WAAH,CAAeI,UAAf,CAAlB;AACAC,YAAAA,SAAS,CAACH,OAAV,CAAkB,UAACY,IAAD,EAAU;AAC1B,kBAAIA,IAAI,CAACH,OAAL,CAAa,OAAb,EAAsB,EAAtB,KAA6BD,EAAjC,EAAqC;AACnCG,gBAAAA,QAAQ,GAAGvB,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,YAAsCO,EAAtC,SAAX;AACD;AACF,aAJD;AAKD,WARD;AASMK,UAAAA,YAbD,GAagB1B,EAAE,CAAC2B,YAAH,CAAgBH,QAAhB,EAA0B,MAA1B,CAbhB;AAcCI,UAAAA,YAdD,GAcgB1B,MAAM,CAACwB,YAAD,CAdtB;AAAA;AAAA,2CAe0BvB,MAAM,GAClC0B,GAD4B,CACxBzB,IADwB,EAE5BI,OAF4B,CAEpBoB,YAAY,CAACE,OAFO,CAf1B;;AAAA;AAeCC,UAAAA,gBAfD;AAkBCC,UAAAA,WAlBD,GAkBeD,gBAAgB,CAACE,QAAjB,EAlBf;AAAA;AAoBHZ,YAAAA,EAAE,EAAFA,EApBG;AAqBHW,YAAAA,WAAW,EAAXA;AArBG,aAsBAJ,YAAY,CAACM,IAtBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport matter from \"gray-matter\";\r\nimport remark from \"remark\";\r\nimport html from \"remark-html\";\r\n\r\nexport function getAllIssuesIds() {\r\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\r\n  const foldersNames = fs.readdirSync(issuesDirectory);\r\n  var allFiles = [];\r\n  foldersNames.forEach((folder) => {\r\n    const folderPath = path.join(issuesDirectory, folder);\r\n    const fileNames = fs.readdirSync(folderPath);\r\n    allFiles.concat(fileNames);\r\n  });\r\n  return allFiles.map((File) => {\r\n    return {\r\n      params: {\r\n        id: File.replace(/\\.md$/, \"\"),\r\n      },\r\n    };\r\n  });\r\n}\r\n\r\nexport async function getIssueData(id) {\r\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\r\n  const foldersNames = fs.readdirSync(issuesDirectory);\r\n  var fullPath = \"\";\r\n  foldersNames.forEach((folder) => {\r\n    const folderPath = path.join(issuesDirectory, folder);\r\n    const fileNames = fs.readdirSync(folderPath);\r\n    fileNames.forEach((file) => {\r\n      if (file.replace(/\\.md$/, \"\") == id) {\r\n        fullPath = path.join(issuesDirectory, folder, `${id}.md`);\r\n      }\r\n    });\r\n  });\r\n  const fileContents = fs.readFileSync(fullPath, \"utf8\");\r\n  const matterResult = matter(fileContents);\r\n  const processedContent = await remark()\r\n    .use(html)\r\n    .process(matterResult.content);\r\n  const contentHtml = processedContent.toString();\r\n  return {\r\n    id,\r\n    contentHtml,\r\n    ...matterResult.data,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}