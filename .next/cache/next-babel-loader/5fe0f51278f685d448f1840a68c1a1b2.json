{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kamil\\\\OneDrive\\\\Dokumenty\\\\PWr\\\\VII semestr\\\\Seminarium dyplomowe\\\\Projekt\\\\SprawaDlaImigranta\\\\components\\\\shared\\\\Cudzoziemcy\\\\FoldersHeaderBar.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Breadcrumb, Row, Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useRouter } from \"next/router\";\n\nvar parseText = function parseText(text) {\n  var displayedText = true;\n\n  for (var x = 0; x < text.length; x++) {\n    var c = text.charAt(x);\n\n    if (displayedText && c == \"-\") {\n      text = text.substring(0, x) + \" \" + text.substring(x + 1, text.length);\n    }\n  }\n\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nvar parseURL = function parseURL(url) {\n  var items = url.split(\"/\");\n  items.forEach(function (item) {\n    item.split(\"-\").join(\" \");\n  });\n  return items;\n};\n\nvar FoldersHeaderBar = function FoldersHeaderBar() {\n  var router = useRouter();\n  return __jsx(Container, {\n    className: \"grey-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    className: \"folders-navigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Breadcrumb.Item, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, parseURL(router.asPath)))));\n};\n\nexport default FoldersHeaderBar;","map":{"version":3,"sources":["C:/Users/kamil/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/components/shared/Cudzoziemcy/FoldersHeaderBar.js"],"names":["Breadcrumb","Row","Container","FontAwesomeIcon","useRouter","parseText","text","displayedText","x","length","c","charAt","substring","toUpperCase","slice","parseURL","url","items","split","forEach","item","join","FoldersHeaderBar","router","asPath"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,SAA1B,QAA2C,iBAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AAC1B,MAAIC,aAAa,GAAG,IAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,CAAC,GAAGJ,IAAI,CAACK,MAAL,CAAYH,CAAZ,CAAR;;AAEA,QAAID,aAAa,IAAIG,CAAC,IAAI,GAA1B,EAA+B;AAC7BJ,MAAAA,IAAI,GAAGA,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBJ,CAAlB,IAAuB,GAAvB,GAA6BF,IAAI,CAACM,SAAL,CAAeJ,CAAC,GAAG,CAAnB,EAAsBF,IAAI,CAACG,MAA3B,CAApC;AACD;AACF;;AACD,SAAOH,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeE,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAtC;AACD,CAVD;;AAYA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACxB,MAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,IAAD,EAAU;AACtBA,IAAAA,IAAI,CAACF,KAAL,CAAW,GAAX,EAAgBG,IAAhB,CAAqB,GAArB;AACD,GAFD;AAGA,SAAOJ,KAAP;AACD,CAND;;AAQA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,MAAM,GAAGnB,SAAS,EAAxB;AACA,SACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,IAAI,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,QAAQ,CAACQ,MAAM,CAACC,MAAR,CADX,CADF,CADF,CADF,CADF;AAYD,CAdD;;AAgBA,eAAeF,gBAAf","sourcesContent":["import { Breadcrumb, Row, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst parseText = (text) => {\r\n  var displayedText = true;\r\n  for (var x = 0; x < text.length; x++) {\r\n    var c = text.charAt(x);\r\n\r\n    if (displayedText && c == \"-\") {\r\n      text = text.substring(0, x) + \" \" + text.substring(x + 1, text.length);\r\n    }\r\n  }\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\n\r\nconst parseURL = (url) => {\r\n  var items = url.split(\"/\");\r\n  items.forEach((item) => {\r\n    item.split(\"-\").join(\" \");\r\n  });\r\n  return items;\r\n};\r\n\r\nconst FoldersHeaderBar = () => {\r\n  const router = useRouter();\r\n  return (\r\n    <Container className=\"grey-box\">\r\n      <Row className=\"folders-navigation\">\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/\">\r\n            {parseURL(router.asPath)}\r\n            {/* <FontAwesomeIcon icon=\"home\" /> */}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FoldersHeaderBar;\r\n"]},"metadata":{},"sourceType":"module"}