{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport useForm from \"./useForm\";\nimport validate from \"../Walidacja/validateForm\";\nimport FormHeader from \"./FormHeader\";\nimport AuthoritySelection from \"./AuthhoritySelection\";\nvar initialState = {\n  surname: \"\",\n  familyName: \"\",\n  name1: \"\",\n  fathersName: \"\",\n  motherName: \"\",\n  mothersMaidenName: \"\",\n  birthDate: \"\",\n  sex: \"\",\n  birthPlace: \"\",\n  birthCountry: \"\",\n  nationality: \"\",\n  citizenShip: \"\",\n  maritalStatus: \"\",\n  education: \"\",\n  practisedProffesion: \"\",\n  length: \"\",\n  eyesColour: \"\",\n  specialMarks: \"\",\n  pesel: \"\",\n  firstDateInPoland: \"\",\n  stayPeriod: \"\",\n  docSerie: \"\",\n  docNumber: \"\",\n  docIssueDate: \"\",\n  docExpiryDate: \"\",\n  docAuthority: \"\",\n  docOthers: \"\",\n  resDistrict: \"\",\n  resMunicipality: \"\",\n  resCity: \"\",\n  resStreet: \"\",\n  resHomeNumber: \"\",\n  resApartmentNumber: \"\",\n  resPostalCode: \"\",\n  newVisaPeriod: \"\",\n  toDate: \"\",\n  visaType: \"\",\n  financialResource: \"\",\n  employerDesc: \"\",\n  justification: \"\"\n};\n\nvar InteractiveForm = function InteractiveForm(props) {\n  var visa = props.title.split(\" \");\n\n  var _useForm = useForm(submit, validate, initialState),\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit,\n      values = _useForm.values,\n      errors = _useForm.errors;\n\n  function submit() {\n    console.log(\"Form submitted successfuly!\");\n  }\n\n  return __jsx(\"div\", {\n    className: \"gray-box forms\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true\n  }, __jsx(FormHeader, {\n    title: props.title\n  }), __jsx(AuthoritySelection, null), __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h3\", null, \"A. Dane osobowe cudzoziemca\")), __jsx(Col, {\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"1. Nazwisko\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.surname && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"surname\",\n    value: values.surname,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.surname && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.surname)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"2. Nazwisko(a) poprzednie\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousSurname1\",\n    value: values.previousSurname1,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"previousSurname2\",\n    value: values.previousSurname2,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"3. Imi\\u0119 (imiona)\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.name1 && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"name1\",\n    value: values.name1,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.name1 && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.name1)), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    name: \"name2\",\n    value: values.name2,\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"4. Imi\\u0119 ojca\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.fathersName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"fathersName\",\n    value: values.fathersName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.fathersName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.fathersName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"5. Imi\\u0119 matki\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.motherName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"mothersName\",\n    value: values.motherName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.motherName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.motherName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"6. Nazwisko rodowe matki\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.mothersMaidenName && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"mothersMaidenName\",\n    value: values.mothersMaidenName,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.mothersMaidenName && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.mothersMaidenName)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"7. Data urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 6,\n    lg: 3,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthDate && \"input-error\", \" \"),\n    type: \"date\",\n    name: \"birthDate\",\n    value: values.birthDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthDate)), __jsx(Form.Group, {\n    className: \"filed-title sex\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"8. P\\u0142e\\u0107\")), __jsx(Form.Group, {\n    className: \"sex\",\n    s: 12,\n    md: 6,\n    lg: 4,\n    as: Col\n  }, __jsx(Form.Check, {\n    id: \"Male\",\n    type: \"radio\",\n    label: \"M\\u0119\\u017Cczyzna\",\n    name: \"sex\",\n    value: \"M\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    className: \"sex\",\n    s: 12,\n    md: 6,\n    lg: 4,\n    as: Col\n  }, __jsx(Form.Check, {\n    id: \"Female\",\n    type: \"radio\",\n    label: \"Kobieta\",\n    name: \"sex\",\n    value: \"K\",\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.sex && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.sex)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"9. Miejsce urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthPlace && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"birthPlace\",\n    value: values.birthPlace,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthPlace && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthPlace)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"10. Pa\\u0144stwo urodzenia\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.birthCountry && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"birthCountry\",\n    value: values.birthCountry,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.birthCountry && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.birthCountry)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"11. Obywatelstwo\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.citizenShip && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"citizenShip\",\n    value: values.citizenShip,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.citizenShip && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.citizenShip)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"12. Narodowo\\u015B\\u0107\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.nationality && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"nationality\",\n    value: values.nationality,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.nationality && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.nationality)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"13. Stan cywilny\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"kawaler/panna\"\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"\\u017Conaty/zam\\u0119\\u017Cna\"\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"rowiedziona/rozwiedziony\"\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"wdowa/wdowiec\"\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"w separacji\"\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"inne\"\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.maritalStatus && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.maritalStatus)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"14. Wykszta\\u0142cenie\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.education && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"education\",\n    value: values.education,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.education && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.education)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"15. Zaw\\xF3d wykonywany\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.practisedProffesion && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"practisedProfession\",\n    value: values.practisedProffesion,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.practisedProffesion && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.practisedProffesion))))), __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h3\", null, \"B. Dokument podr\\xF3\\u017Cy cudzoziemca\")), __jsx(Col, {\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    className: \"section-B\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    className: \"section-B\",\n    as: Col,\n    s: 8,\n    md: 4,\n    lg: 2\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Seria dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docSerie && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"docSerie\",\n    value: values.docSerie,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docSerie && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docSerie))), __jsx(Form.Group, {\n    className: \"section-B\",\n    as: Col,\n    s: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Numer dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docNumber && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"docNumber\",\n    value: values.docNumber,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docNumber && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docNumber))))), __jsx(Form.Group, {\n    className: \"section-B\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Data wydania \", __jsx(\"br\", null), \"dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docIssueDate && \"input-error\", \" \"),\n    type: \"date\",\n    name: \"docIssueDate\",\n    value: values.docIssueDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docIssueDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docIssueDate))), __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Data up\\u0142ywu wa\\u017Cno\\u015Bci dokuemntu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docExpiryDate && \"input-error\", \" \"),\n    type: \"date\",\n    name: \"docExpiryDate\",\n    value: values.docExpiryDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docExpiryDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docExpiryDate))))), __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Organ wydaj\\u0105cy dokument\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docAuthority && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"docAuthority\",\n    value: values.docAuthority,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docAuthority && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docAuthority)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Liczba innych os\\xF3b wpisanych do dokumentu podr\\xF3\\u017Cy\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 8,\n    md: 4,\n    lg: 2\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docOthers && \"input-error\", \" \"),\n    type: \"text\",\n    maxLength: 2,\n    name: \"docOthers\",\n    value: values.docOthers,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docOthers && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docOthers))))), __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h3\", null, \"C. Miejsce zamieszkania w Rzeczpospolitej Polskiej\")), __jsx(Col, {\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"1. Miejscowo\\u015B\\u0107\")), __jsx(Form.Group, {\n    xs: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resCity && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resCity\",\n    value: values.resCity,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resCity && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resCity)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"2. Ulica\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resStreet && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resStreet\",\n    value: values.resStreet,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resStreet && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resStreet)), __jsx(Form.Group, {\n    className: \"three-inputs\",\n    as: Col,\n    s: 12,\n    lg: 10\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"3. Numer domu\")), __jsx(Form.Group, {\n    as: Col,\n    s: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resHomeNumber && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resHomeNumber\",\n    value: values.resHomeNumber,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resHomeNumber && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resHomeNumber))), __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    s: 12\n  }, __jsx(Form.Label, null, \"4. Numer mieszkania\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resApartmentNumber && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resApartmentNumber\",\n    value: values.resApartmentNumber,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resApartmentNumber && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resApartmentNumber))), __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    s: 12\n  }, __jsx(Form.Label, null, \"5. Kod pocztowy\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 8,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resPostalCode && \"input-error\", \" \"),\n    type: \"text\",\n    maxLength: 6,\n    placeholder: \"nn-nnn\",\n    name: \"resPostalCode\",\n    value: values.resPostalCode,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resPostalCode && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resPostalCode))))), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"6. Wojew\\xF3dztwo\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    as: \"select\"\n  }, __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\"), __jsx(\"option\", null, \"dolno\\u015Bl\\u0105skie\")), __jsx(Form.Text, null, \"* pole jest wymagane\")), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"7. Powiat\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resDistrict && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resDistrict\",\n    value: values.resDistrict,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resDistrict && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resDistrict)), __jsx(Form.Group, {\n    className: \"filed-title\",\n    xs: 12,\n    as: Col\n  }, __jsx(Form.Label, null, \"8. Gmina\")), __jsx(Form.Group, {\n    s: 12,\n    md: 10,\n    lg: 6,\n    as: Col\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.resMunicipality && \"input-error\", \" \"),\n    type: \"text\",\n    name: \"resMunicipality\",\n    value: values.resMunicipality,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.resMunicipality && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.resMunicipality))))), __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h3\", null, \"D. Uzasadnienie wniosku\")), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"1.Prosz\\u0119 o przed\\u0142u\\u017Cenie wizy \", visa[visa.length - 1])), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 4,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"na okres\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.newVisaPeriod && \"input-error\"),\n    type: \"text\",\n    name: \"newVisaPeriod\",\n    value: values.newVisaPeriod,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.newVisaPeriod && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.newVisaPeriod))), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Do\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.toDate && \"input-error\"),\n    type: \"date\",\n    name: \"toDate\",\n    value: values.toDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.toDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.toDate))))), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"jednokrotnej\",\n    name: \"visaType\",\n    value: \"1\",\n    onChange: handleChange\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"dwukrotnej\",\n    name: \"visaType\",\n    value: \"2\",\n    onChange: handleChange\n  }), __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"wielokrotnej\",\n    name: \"visaType\",\n    value: \"3\",\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.visaType && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.visaType)), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"2.Uzasadnienie wniosku\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.justification && \"input-error\"),\n    as: \"textarea\",\n    name: \"justification\",\n    value: values.justification,\n    onChange: handleChange,\n    rows: 7\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.justification && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.justification)), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"3. \\u015Arodki finansowe na pokrycie koszt\\xF3w utrzymania podczas pobytu w Rzeczpospolitej Polskiej (zaznaczy\\u0107 wszystkie wyst\\u0119puj\\u0105ce mo\\u017Cliwo\\u015Bci)\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"got\\xF3wka\"\n  })), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"karty kredytowe\",\n    name: \"financialResource\",\n    value: \"1\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"ubezpieczenie podr\\xF3\\u017Cne\",\n    name: \"financialResource\",\n    value: \"2\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"ubezpieczenie zdrowotne\",\n    name: \"financialResource\",\n    value: \"3\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"czeki podr\\xF3\\u017Cne\",\n    name: \"financialResource\",\n    value: \"4\",\n    onChange: handleChange\n  })), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"inne\",\n    name: \"financialResource\",\n    value: \"5\",\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.financialResource && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.financialResource)), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"4. Dane o zatrudnieniu cudzoziemca na terytorium RP\")), __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Podmiot powierzaj\\u0105cy wykonywanie pracy cudzoziemcowi\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.employerDesc && \"input-error\"),\n    as: \"textarea\",\n    name: \"employerDesc\",\n    values: values.employerDesc,\n    onChange: handleChange,\n    rows: 7\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.employerDesc && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.employerDesc)), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"5. Pobyty i podr\\xF3\\u017Ce zagraniczne w ci\\u0105gu ostatnich 5 lat (kraj, okres pobytu)\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 7\n  })), __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"6. Ostatnio wydana wiza krajowa\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Data pierwszego wjazdu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.firstDateInPoland && \"input-error\"),\n    type: \"date\",\n    name: \"firstDateInPoland\",\n    value: values.firstDateInPoland,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.firstDateInPoland && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.firstDateInPoland))), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Okres pobytu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.stayPeriod && \"input-error\"),\n    type: \"text\",\n    name: \"stayPeriod\",\n    value: values.stayPeriod,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.stayPeriod && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.stayPeriod))))), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 6,\n    lg: 2\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Seria dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docSerie && \"input-error\"),\n    type: \"text\",\n    name: \"docSerie\",\n    value: values.docSerie,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.docSerie && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docSerie))), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 6,\n    lg: 4\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Numer dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docNumber && \"input-error\"),\n    type: \"text\",\n    name: \"docNumber\",\n    value: values.docNumber,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"*pole jest wymagane\"), errors.docNumber && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docNumber))))), __jsx(Form.Group, {\n    className: \"section-B\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Data wydania \", __jsx(\"br\", null), \"dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docIssueDate && \"input-error\"),\n    type: \"date\",\n    name: \"docIssueDate\",\n    value: values.docIssueDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docIssueDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docIssueDate))), __jsx(Form.Group, {\n    as: Col,\n    s: 12,\n    md: 6,\n    lg: 3\n  }, __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Data up\\u0142ywu wa\\u017Cno\\u015Bci dokumentu\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docExpiryDate && \"input-error\"),\n    type: \"date\",\n    name: \"docExpiryDate\",\n    value: values.docExpiryDate,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docExpiryDate && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docExpiryDate))))), __jsx(Form.Group, {\n    className: \"filed-title\",\n    as: Col,\n    xs: 12\n  }, __jsx(Form.Label, null, \"Organ wydaj\\u0105cy dokument\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    className: \"\".concat(errors.docAuthority && \"input-error\"),\n    type: \"text\",\n    name: \"docAuthority\",\n    value: values.docAuthority,\n    onChange: handleChange\n  }), __jsx(Form.Text, null, \"* pole jest wymagane\"), errors.docAuthority && __jsx(\"p\", {\n    className: \"error-msg\"\n  }, errors.docAuthority))), __jsx(Row, null, __jsx(Col, {\n    xs: 12\n  }, __jsx(\"h4\", null, \"Za\\u0142\\u0105czniki do wniosku\")), __jsx(Form.Group, {\n    as: Col,\n    xs: 12,\n    md: 10,\n    lg: 6\n  }, __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 7\n  }))), __jsx(Row, null, __jsx(Button, {\n    type: \"submit\",\n    className: \"btn-lg pdf\",\n    variant: \"primary\"\n  }, \"Generuj PDF\")))))));\n};\n\nexport default InteractiveForm;","map":null,"metadata":{},"sourceType":"module"}