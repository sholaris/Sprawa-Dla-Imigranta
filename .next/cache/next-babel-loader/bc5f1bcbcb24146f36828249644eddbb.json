{"ast":null,"code":"function validatePostalCode(postal_code) {\n  var reg = /^[0-9]{2}(?:-[0-9]{3})?$/;\n  if (!reg.test(postal_code)) return false;else return true;\n}\n\nfunction validatePESEL(pesel) {\n  var reg = /^[0-9]{11}$/;\n  if (reg.test(pesel) == false) return false;else {\n    var digits = (\"\" + pesel).split(\"\");\n\n    if (parseInt(pesel.substring(4, 6)) > 31 || parseInt(pesel.substring(2, 4)) > 12) {\n      return false;\n    }\n\n    var checksum = (1 * parseInt(digits[0]) + 3 * parseInt(digits[1]) + 7 * parseInt(digits[2]) + 9 * parseInt(digits[3]) + 1 * parseInt(digits[4]) + 3 * parseInt(digits[5]) + 7 * parseInt(digits[6]) + 9 * parseInt(digits[7]) + 1 * parseInt(digits[8]) + 3 * parseInt(digits[9])) % 10;\n    if (checksum == 0) checksum = 10;\n    checksum = 10 - checksum;\n    return parseInt(digits[10]) == checksum;\n  }\n}\n\nfunction validateLength(length) {\n  var reg = /^[0-9]{3}$/;\n  if (!reg.test(length)) return false;else if (parseInt(length) > 251) return false;else return true;\n}\n\nfunction validateNumbers(data) {\n  var reg = /^[0-9-]*$/;\n  if (!reg.test(data)) return false;else return true;\n}\n\nexport default function validate(values) {\n  var errors = {};\n  var empty_field_error = \"Pole nie może być puste\";\n  var wrong_date_error = \"Podaj datę z przeszłości\";\n  var wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\n  var wrong_number_values_error = \"Podaj poprawną wartość\";\n  var today = new Date();\n  var input_birthDate = new Date(values.birthDate);\n  var input_lastDateInPoland = new Date(values.lastDateInPoland);\n  var input_FirstMemberBirthDate = new Date(values.FirstMemberBirthDate);\n  var input_SecondMemberBirthDate = new Date(values.SecondMemberBirthDate);\n  var input_ThirdMemberBirthDate = new Date(values.ThirdMemberBirthDate);\n\n  for (var key in values) {\n    if (values.hasOwnProperty(key)) {\n      if (!values[key]) {\n        errors[key] = empty_field_error;\n      }\n    }\n  }\n\n  if (input_birthDate >= today) {\n    errors.birthDate = wrong_date_error;\n  }\n\n  if (!validatePostalCode(values.resPostalCode)) {\n    errors.resPostalCode = wrong_postalcode_error;\n  }\n\n  if (input_FirstMemberBirthDate >= today) {\n    errors.FirstMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.FirstMemberBirthDate) {\n    errors.FirstMemberBirthDate = \"\";\n  }\n\n  if (input_SecondMemberBirthDate >= today) {\n    errors.SecondMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.SecondMemberBirthDate) {\n    errors.SecondMemberBirthDate = \"\";\n  }\n\n  if (input_ThirdMemberBirthDate >= today) {\n    errors.ThirdMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.ThirdMemberBirthDate) {\n    errors.ThirdMemberBirthDate = \"\";\n  }\n\n  if (input_lastDateInPoland >= today) {\n    errors.lastDateInPoland = wrong_date_error;\n  }\n\n  if (!values.lastDateInPoland) {\n    errors.lastDateInPoland = \"\";\n  }\n\n  if (!validateLength(values.length)) {\n    errors.length = wrong_number_values_error;\n  }\n\n  if (!values.length) {\n    errors.length = empty_field_error;\n  }\n\n  if (values.pesel) {\n    if (!validatePESEL(values.pesel)) {\n      errors.pesel = \"Prodaj poprawny numer PESEL\";\n    }\n  }\n\n  if (!validateNumbers(values.resHomeNumber)) {\n    errors.resHomeNumber = wrong_number_values_error;\n  }\n\n  if (!validateNumbers(values.resApartmentNumber)) {\n    errors.resApartmentNumber = wrong_number_values_error;\n  }\n\n  return errors;\n}","map":null,"metadata":{},"sourceType":"module"}