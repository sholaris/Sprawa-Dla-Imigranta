{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport remark from \"remark\";\nimport html from \"remark-html\";\nexport function getAllIssuesIds() {\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\n  const foldersNames = fs.readdirSync(issuesDirectory);\n  var allFiles = [];\n  foldersNames.forEach(folder => {\n    const folderPath = path.join(issuesDirectory, folder);\n    const fileNames = fs.readdirSync(folderPath);\n    allFiles.concat(fileNames);\n  });\n  return allFiles.map(File => {\n    return {\n      params: {\n        id: File.replace(/\\.md$/, \"\")\n      }\n    };\n  });\n}\nexport async function getIssueData(id) {\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\n  const foldersNames = fs.readdirSync(issuesDirectory);\n  var fullPath = \"\";\n  foldersNames.forEach(folder => {\n    const folderPath = path.join(issuesDirectory, folder);\n    const fileNames = fs.readdirSync(folderPath);\n    fileNames.forEach(file => {\n      if (file.replace(/\\.md$/, \"\") == id) {\n        fullPath = path.join(issuesDirectory, folder, `${id}.md`);\n      }\n    });\n  });\n  const fileContents = fs.readFileSync(fullPath, \"utf8\");\n  const matterResult = matter(fileContents);\n  const processedContent = await remark().use(html).process(matterResult.content);\n  const contentHtml = processedContent.toString();\n  return _objectSpread({\n    id,\n    contentHtml\n  }, matterResult.data);\n}","map":{"version":3,"sources":["C:/Users/kamil/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/lib/issues.js"],"names":["fs","path","matter","remark","html","getAllIssuesIds","issuesDirectory","join","process","cwd","foldersNames","readdirSync","allFiles","forEach","folder","folderPath","fileNames","concat","map","File","params","id","replace","getIssueData","fullPath","file","fileContents","readFileSync","matterResult","processedContent","use","content","contentHtml","toString","data"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,QAAMC,eAAe,GAAGL,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAAxB;AACA,QAAMC,YAAY,GAAGV,EAAE,CAACW,WAAH,CAAeL,eAAf,CAArB;AACA,MAAIM,QAAQ,GAAG,EAAf;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAsBC,MAAD,IAAY;AAC/B,UAAMC,UAAU,GAAGd,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,CAAnB;AACA,UAAME,SAAS,GAAGhB,EAAE,CAACW,WAAH,CAAeI,UAAf,CAAlB;AACAH,IAAAA,QAAQ,CAACK,MAAT,CAAgBD,SAAhB;AACD,GAJD;AAKA,SAAOJ,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AAC5B,WAAO;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEF,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsB,EAAtB;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD;AAED,OAAO,eAAeC,YAAf,CAA4BF,EAA5B,EAAgC;AACrC,QAAMf,eAAe,GAAGL,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAAxB;AACA,QAAMC,YAAY,GAAGV,EAAE,CAACW,WAAH,CAAeL,eAAf,CAArB;AACA,MAAIkB,QAAQ,GAAG,EAAf;AACAd,EAAAA,YAAY,CAACG,OAAb,CAAsBC,MAAD,IAAY;AAC/B,UAAMC,UAAU,GAAGd,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,CAAnB;AACA,UAAME,SAAS,GAAGhB,EAAE,CAACW,WAAH,CAAeI,UAAf,CAAlB;AACAC,IAAAA,SAAS,CAACH,OAAV,CAAmBY,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACH,OAAL,CAAa,OAAb,EAAsB,EAAtB,KAA6BD,EAAjC,EAAqC;AACnCG,QAAAA,QAAQ,GAAGvB,IAAI,CAACM,IAAL,CAAUD,eAAV,EAA2BQ,MAA3B,EAAoC,GAAEO,EAAG,KAAzC,CAAX;AACD;AACF,KAJD;AAKD,GARD;AASA,QAAMK,YAAY,GAAG1B,EAAE,CAAC2B,YAAH,CAAgBH,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAMI,YAAY,GAAG1B,MAAM,CAACwB,YAAD,CAA3B;AACA,QAAMG,gBAAgB,GAAG,MAAM1B,MAAM,GAClC2B,GAD4B,CACxB1B,IADwB,EAE5BI,OAF4B,CAEpBoB,YAAY,CAACG,OAFO,CAA/B;AAGA,QAAMC,WAAW,GAAGH,gBAAgB,CAACI,QAAjB,EAApB;AACA;AACEZ,IAAAA,EADF;AAEEW,IAAAA;AAFF,KAGKJ,YAAY,CAACM,IAHlB;AAKD","sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport matter from \"gray-matter\";\r\nimport remark from \"remark\";\r\nimport html from \"remark-html\";\r\n\r\nexport function getAllIssuesIds() {\r\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\r\n  const foldersNames = fs.readdirSync(issuesDirectory);\r\n  var allFiles = [];\r\n  foldersNames.forEach((folder) => {\r\n    const folderPath = path.join(issuesDirectory, folder);\r\n    const fileNames = fs.readdirSync(folderPath);\r\n    allFiles.concat(fileNames);\r\n  });\r\n  return allFiles.map((File) => {\r\n    return {\r\n      params: {\r\n        id: File.replace(/\\.md$/, \"\"),\r\n      },\r\n    };\r\n  });\r\n}\r\n\r\nexport async function getIssueData(id) {\r\n  const issuesDirectory = path.join(process.cwd(), \"issues\");\r\n  const foldersNames = fs.readdirSync(issuesDirectory);\r\n  var fullPath = \"\";\r\n  foldersNames.forEach((folder) => {\r\n    const folderPath = path.join(issuesDirectory, folder);\r\n    const fileNames = fs.readdirSync(folderPath);\r\n    fileNames.forEach((file) => {\r\n      if (file.replace(/\\.md$/, \"\") == id) {\r\n        fullPath = path.join(issuesDirectory, folder, `${id}.md`);\r\n      }\r\n    });\r\n  });\r\n  const fileContents = fs.readFileSync(fullPath, \"utf8\");\r\n  const matterResult = matter(fileContents);\r\n  const processedContent = await remark()\r\n    .use(html)\r\n    .process(matterResult.content);\r\n  const contentHtml = processedContent.toString();\r\n  return {\r\n    id,\r\n    contentHtml,\r\n    ...matterResult.data,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}