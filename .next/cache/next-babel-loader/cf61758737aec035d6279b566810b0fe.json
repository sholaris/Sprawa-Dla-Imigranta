{"ast":null,"code":"export default function validate(values) {\n  let errors = {};\n  const empty_field_error = \"Pole nie może być puste\";\n  const wrong_date_error = \"Podaj datę z przeszłości\";\n  const wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\n  const input_birthDate = new Date(values.birthDate);\n  const input_docIssueDate = new Date(values.docIssueDate);\n  const input_docExpiryDate = new Date(values.docExpiryDate);\n  const today = new Date();\n  const regexp = /^[0-9]{2}(?:-[0-9]{3})?$/;\n\n  for (var key in values) {\n    if (values.hasOwnProperty(key)) {\n      if (!values[key]) {\n        errors[key] = empty_field_error;\n      }\n    }\n  }\n\n  if (input_birthDate >= today) {\n    errors.birthDate = wrong_date_error;\n  }\n\n  if (input_docIssueDate >= today) {\n    errors.docIssueDate = wrong_date_error;\n  }\n\n  if (input_docExpiryDate >= today) {\n    errors.docExpiryDate = wrong_date_error;\n  }\n\n  if (!regexp.test(values.resPostalCode)) {}\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/Kamil Styś/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/components/shared/Wnioski/validateForm.js"],"names":["validate","values","errors","empty_field_error","wrong_date_error","wrong_postalcode_error","input_birthDate","Date","birthDate","input_docIssueDate","docIssueDate","input_docExpiryDate","docExpiryDate","today","regexp","key","hasOwnProperty","test","resPostalCode"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACvC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,iBAAiB,GAAG,yBAA1B;AACA,QAAMC,gBAAgB,GAAG,0BAAzB;AACA,QAAMC,sBAAsB,GAAG,sCAA/B;AACA,QAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASN,MAAM,CAACO,SAAhB,CAAxB;AACA,QAAMC,kBAAkB,GAAG,IAAIF,IAAJ,CAASN,MAAM,CAACS,YAAhB,CAA3B;AACA,QAAMC,mBAAmB,GAAG,IAAIJ,IAAJ,CAASN,MAAM,CAACW,aAAhB,CAA5B;AACA,QAAMC,KAAK,GAAG,IAAIN,IAAJ,EAAd;AACA,QAAMO,MAAM,GAAG,0BAAf;;AAEA,OAAK,IAAIC,GAAT,IAAgBd,MAAhB,EAAwB;AACtB,QAAIA,MAAM,CAACe,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;AAC9B,UAAI,CAACd,MAAM,CAACc,GAAD,CAAX,EAAkB;AAChBb,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcZ,iBAAd;AACD;AACF;AACF;;AACD,MAAIG,eAAe,IAAIO,KAAvB,EAA8B;AAC5BX,IAAAA,MAAM,CAACM,SAAP,GAAmBJ,gBAAnB;AACD;;AACD,MAAIK,kBAAkB,IAAII,KAA1B,EAAiC;AAC/BX,IAAAA,MAAM,CAACQ,YAAP,GAAsBN,gBAAtB;AACD;;AACD,MAAIO,mBAAmB,IAAIE,KAA3B,EAAkC;AAChCX,IAAAA,MAAM,CAACU,aAAP,GAAuBR,gBAAvB;AACD;;AACD,MAAI,CAACU,MAAM,CAACG,IAAP,CAAYhB,MAAM,CAACiB,aAAnB,CAAL,EAAwC,CACvC;;AACD,SAAOhB,MAAP;AACD","sourcesContent":["export default function validate(values) {\r\n  let errors = {};\r\n  const empty_field_error = \"Pole nie może być puste\";\r\n  const wrong_date_error = \"Podaj datę z przeszłości\";\r\n  const wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\r\n  const input_birthDate = new Date(values.birthDate);\r\n  const input_docIssueDate = new Date(values.docIssueDate);\r\n  const input_docExpiryDate = new Date(values.docExpiryDate);\r\n  const today = new Date();\r\n  const regexp = /^[0-9]{2}(?:-[0-9]{3})?$/;\r\n\r\n  for (var key in values) {\r\n    if (values.hasOwnProperty(key)) {\r\n      if (!values[key]) {\r\n        errors[key] = empty_field_error;\r\n      }\r\n    }\r\n  }\r\n  if (input_birthDate >= today) {\r\n    errors.birthDate = wrong_date_error;\r\n  }\r\n  if (input_docIssueDate >= today) {\r\n    errors.docIssueDate = wrong_date_error;\r\n  }\r\n  if (input_docExpiryDate >= today) {\r\n    errors.docExpiryDate = wrong_date_error;\r\n  }\r\n  if (!regexp.test(values.resPostalCode)) {\r\n  }\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}