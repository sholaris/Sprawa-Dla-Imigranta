{"ast":null,"code":"function validatePostalCode(postal_code) {\n  const reg = /^[0-9]{2}(?:-[0-9]{3})?$/;\n  if (!reg.test(postal_code)) return false;else return true;\n}\n\nexport default function validate(values) {\n  let errors = {};\n  const empty_field_error = \"Pole nie może być puste\";\n  const wrong_date_error = \"Podaj datę z przeszłości\";\n  const wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\n  const today = new Date();\n  const input_birthDate = new Date(values.birthDate);\n  const input_FirstMemberBirthDate = new Date(values.FirstMemberBirthDate);\n  const input_SecondMemberBirthDate = new Date(values.SecondMemberBirthDate);\n  const input_ThirdMemberBirthDate = new Date(values.ThirdMemberBirthDate);\n\n  for (var key in values) {\n    if (values.hasOwnProperty(key)) {\n      if (!values[key]) {\n        errors[key] = empty_field_error;\n      }\n    }\n  }\n\n  if (input_birthDate >= today) {\n    errors.birthDate = wrong_date_error;\n  }\n\n  if (input_FirstMemberBirthDate >= today) {\n    errors.FirstMemberBirthDate = wrong_date_error;\n  }\n\n  if (input_SecondMemberBirthDate >= today) {\n    errors.SecondMemberBirthDate = wrong_date_error;\n  }\n\n  if (input_ThirdMemberBirthDate >= today) {\n    errors.ThirdMemberBirthDate = wrong_date_error;\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/kamil/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/components/shared/Wnioski/validateForm2.js"],"names":["validatePostalCode","postal_code","reg","test","validate","values","errors","empty_field_error","wrong_date_error","wrong_postalcode_error","today","Date","input_birthDate","birthDate","input_FirstMemberBirthDate","FirstMemberBirthDate","input_SecondMemberBirthDate","SecondMemberBirthDate","input_ThirdMemberBirthDate","ThirdMemberBirthDate","key","hasOwnProperty"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,WAA5B,EAAyC;AACvC,QAAMC,GAAG,GAAG,0BAAZ;AACA,MAAI,CAACA,GAAG,CAACC,IAAJ,CAASF,WAAT,CAAL,EAA4B,OAAO,KAAP,CAA5B,KACK,OAAO,IAAP;AACN;;AAED,eAAe,SAASG,QAAT,CAAkBC,MAAlB,EAA0B;AACvC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,iBAAiB,GAAG,yBAA1B;AACA,QAAMC,gBAAgB,GAAG,0BAAzB;AACA,QAAMC,sBAAsB,GAAG,sCAA/B;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,eAAe,GAAG,IAAID,IAAJ,CAASN,MAAM,CAACQ,SAAhB,CAAxB;AACA,QAAMC,0BAA0B,GAAG,IAAIH,IAAJ,CAASN,MAAM,CAACU,oBAAhB,CAAnC;AACA,QAAMC,2BAA2B,GAAG,IAAIL,IAAJ,CAASN,MAAM,CAACY,qBAAhB,CAApC;AACA,QAAMC,0BAA0B,GAAG,IAAIP,IAAJ,CAASN,MAAM,CAACc,oBAAhB,CAAnC;;AAEA,OAAK,IAAIC,GAAT,IAAgBf,MAAhB,EAAwB;AACtB,QAAIA,MAAM,CAACgB,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;AAC9B,UAAI,CAACf,MAAM,CAACe,GAAD,CAAX,EAAkB;AAChBd,QAAAA,MAAM,CAACc,GAAD,CAAN,GAAcb,iBAAd;AACD;AACF;AACF;;AACD,MAAIK,eAAe,IAAIF,KAAvB,EAA8B;AAC5BJ,IAAAA,MAAM,CAACO,SAAP,GAAmBL,gBAAnB;AACD;;AACD,MAAIM,0BAA0B,IAAIJ,KAAlC,EAAyC;AACvCJ,IAAAA,MAAM,CAACS,oBAAP,GAA8BP,gBAA9B;AACD;;AACD,MAAIQ,2BAA2B,IAAIN,KAAnC,EAA0C;AACxCJ,IAAAA,MAAM,CAACW,qBAAP,GAA+BT,gBAA/B;AACD;;AACD,MAAIU,0BAA0B,IAAIR,KAAlC,EAAyC;AACvCJ,IAAAA,MAAM,CAACa,oBAAP,GAA8BX,gBAA9B;AACD;;AAED,SAAOF,MAAP;AACD","sourcesContent":["function validatePostalCode(postal_code) {\r\n  const reg = /^[0-9]{2}(?:-[0-9]{3})?$/;\r\n  if (!reg.test(postal_code)) return false;\r\n  else return true;\r\n}\r\n\r\nexport default function validate(values) {\r\n  let errors = {};\r\n  const empty_field_error = \"Pole nie może być puste\";\r\n  const wrong_date_error = \"Podaj datę z przeszłości\";\r\n  const wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\r\n  const today = new Date();\r\n  const input_birthDate = new Date(values.birthDate);\r\n  const input_FirstMemberBirthDate = new Date(values.FirstMemberBirthDate);\r\n  const input_SecondMemberBirthDate = new Date(values.SecondMemberBirthDate);\r\n  const input_ThirdMemberBirthDate = new Date(values.ThirdMemberBirthDate);\r\n\r\n  for (var key in values) {\r\n    if (values.hasOwnProperty(key)) {\r\n      if (!values[key]) {\r\n        errors[key] = empty_field_error;\r\n      }\r\n    }\r\n  }\r\n  if (input_birthDate >= today) {\r\n    errors.birthDate = wrong_date_error;\r\n  }\r\n  if (input_FirstMemberBirthDate >= today) {\r\n    errors.FirstMemberBirthDate = wrong_date_error;\r\n  }\r\n  if (input_SecondMemberBirthDate >= today) {\r\n    errors.SecondMemberBirthDate = wrong_date_error;\r\n  }\r\n  if (input_ThirdMemberBirthDate >= today) {\r\n    errors.ThirdMemberBirthDate = wrong_date_error;\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}