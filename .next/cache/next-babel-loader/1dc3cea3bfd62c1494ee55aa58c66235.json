{"ast":null,"code":"function validatePostalCode(postal_code) {\n  var reg = /^[0-9]{2}(?:-[0-9]{3})?$/;\n  if (!reg.test(postal_code)) return false;else return true;\n}\n\nfunction validatePESEL(pesel) {\n  var reg = /^[0-9]{11}$/;\n  if (reg.test(pesel) == false) return false;else {\n    var digits = (\"\" + pesel).split(\"\");\n\n    if (parseInt(pesel.substring(4, 6)) > 31 || parseInt(pesel.substring(2, 4)) > 12) {\n      return false;\n    }\n\n    var checksum = (1 * parseInt(digits[0]) + 3 * parseInt(digits[1]) + 7 * parseInt(digits[2]) + 9 * parseInt(digits[3]) + 1 * parseInt(digits[4]) + 3 * parseInt(digits[5]) + 7 * parseInt(digits[6]) + 9 * parseInt(digits[7]) + 1 * parseInt(digits[8]) + 3 * parseInt(digits[9])) % 10;\n    if (checksum == 0) checksum = 10;\n    checksum = 10 - checksum;\n    return parseInt(digits[10]) == checksum;\n  }\n}\n\nfunction validateLength(length) {\n  var reg = /^[0-9]{3}$/;\n  if (!reg.test(length)) return false;else if (parseInt(length) > 251) return false;else return true;\n}\n\nfunction validateNumbers(data) {\n  var reg = /^[0-9-]*$/;\n  if (!reg.test(data)) return false;else return true;\n}\n\nexport default function validate(values) {\n  var errors = {};\n  var empty_field_error = \"Pole nie może być puste\";\n  var wrong_date_error = \"Podaj datę z przeszłości\";\n  var wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\n  var wrong_number_values_error = \"Podaj poprawną wartość\";\n  var today = new Date();\n  var input_birthDate = new Date(values.birthDate);\n  var input_lastDateInPoland = new Date(values.lastDateInPoland);\n  var input_FirstMemberBirthDate = new Date(values.FirstMemberBirthDate);\n  var input_SecondMemberBirthDate = new Date(values.SecondMemberBirthDate);\n  var input_ThirdMemberBirthDate = new Date(values.ThirdMemberBirthDate);\n\n  for (var key in values) {\n    if (values.hasOwnProperty(key)) {\n      if (!values[key]) {\n        errors[key] = empty_field_error;\n      }\n    }\n  }\n\n  if (input_birthDate >= today) {\n    errors.birthDate = wrong_date_error;\n  }\n\n  if (!validatePostalCode(values.resPostalCode)) {\n    errors.resPostalCode = wrong_postalcode_error;\n  }\n\n  if (input_FirstMemberBirthDate >= today) {\n    errors.FirstMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.FirstMemberBirthDate) {\n    errors.FirstMemberBirthDate = \"\";\n  }\n\n  if (input_SecondMemberBirthDate >= today) {\n    errors.SecondMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.SecondMemberBirthDate) {\n    errors.SecondMemberBirthDate = \"\";\n  }\n\n  if (input_ThirdMemberBirthDate >= today) {\n    errors.ThirdMemberBirthDate = wrong_date_error;\n  }\n\n  if (!values.ThirdMemberBirthDate) {\n    errors.ThirdMemberBirthDate = \"\";\n  }\n\n  if (input_lastDateInPoland >= today) {\n    errors.lastDateInPoland = wrong_date_error;\n  }\n\n  if (!values.lastDateInPoland) {\n    errors.lastDateInPoland = \"\";\n  }\n\n  if (!validateLength(values.length)) {\n    errors.length = wrong_number_values_error;\n  }\n\n  if (!values.length) {\n    errors.length = empty_field_error;\n  }\n\n  if (values.pesel) {\n    if (!validatePESEL(values.pesel)) {\n      errors.pesel = \"Prodaj poprawny numer PESEL\";\n    }\n  }\n\n  if (!validateNumbers(values.resHomeNumber)) {\n    errors.resHomeNumber = wrong_number_values_error;\n  }\n\n  if (!validateNumbers(values.resApartmentNumber)) {\n    errors.resApartmentNumber = wrong_number_values_error;\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/Kamil Styś/OneDrive/Dokumenty/PWr/VII semestr/Seminarium dyplomowe/Projekt/SprawaDlaImigranta/components/shared/Wnioski/validateForm2.js"],"names":["validatePostalCode","postal_code","reg","test","validatePESEL","pesel","digits","split","parseInt","substring","checksum","validateLength","length","validateNumbers","data","validate","values","errors","empty_field_error","wrong_date_error","wrong_postalcode_error","wrong_number_values_error","today","Date","input_birthDate","birthDate","input_lastDateInPoland","lastDateInPoland","input_FirstMemberBirthDate","FirstMemberBirthDate","input_SecondMemberBirthDate","SecondMemberBirthDate","input_ThirdMemberBirthDate","ThirdMemberBirthDate","key","hasOwnProperty","resPostalCode","resHomeNumber","resApartmentNumber"],"mappings":"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","sourcesContent":["function validatePostalCode(postal_code) {\r\n  const reg = /^[0-9]{2}(?:-[0-9]{3})?$/;\r\n  if (!reg.test(postal_code)) return false;\r\n  else return true;\r\n}\r\nfunction validatePESEL(pesel) {\r\n  const reg = /^[0-9]{11}$/;\r\n  if (reg.test(pesel) == false) return false;\r\n  else {\r\n    var digits = (\"\" + pesel).split(\"\");\r\n    if (\r\n      parseInt(pesel.substring(4, 6)) > 31 ||\r\n      parseInt(pesel.substring(2, 4)) > 12\r\n    ) {\r\n      return false;\r\n    }\r\n    var checksum =\r\n      (1 * parseInt(digits[0]) +\r\n        3 * parseInt(digits[1]) +\r\n        7 * parseInt(digits[2]) +\r\n        9 * parseInt(digits[3]) +\r\n        1 * parseInt(digits[4]) +\r\n        3 * parseInt(digits[5]) +\r\n        7 * parseInt(digits[6]) +\r\n        9 * parseInt(digits[7]) +\r\n        1 * parseInt(digits[8]) +\r\n        3 * parseInt(digits[9])) %\r\n      10;\r\n    if (checksum == 0) checksum = 10;\r\n    checksum = 10 - checksum;\r\n    return parseInt(digits[10]) == checksum;\r\n  }\r\n}\r\n\r\nfunction validateLength(length) {\r\n  var reg = /^[0-9]{3}$/;\r\n  if (!reg.test(length)) return false;\r\n  else if (parseInt(length) > 251) return false;\r\n  else return true;\r\n}\r\n\r\nfunction validateNumbers(data) {\r\n  var reg = /^[0-9-]*$/;\r\n  if (!reg.test(data)) return false;\r\n  else return true;\r\n}\r\nexport default function validate(values) {\r\n  let errors = {};\r\n  const empty_field_error = \"Pole nie może być puste\";\r\n  const wrong_date_error = \"Podaj datę z przeszłości\";\r\n  const wrong_postalcode_error = \"Podaj kod pocztowy w formacie nn-nnn\";\r\n  const wrong_number_values_error = \"Podaj poprawną wartość\";\r\n  const today = new Date();\r\n  const input_birthDate = new Date(values.birthDate);\r\n  const input_lastDateInPoland = new Date(values.lastDateInPoland);\r\n  const input_FirstMemberBirthDate = new Date(values.FirstMemberBirthDate);\r\n  const input_SecondMemberBirthDate = new Date(values.SecondMemberBirthDate);\r\n  const input_ThirdMemberBirthDate = new Date(values.ThirdMemberBirthDate);\r\n\r\n  for (var key in values) {\r\n    if (values.hasOwnProperty(key)) {\r\n      if (!values[key]) {\r\n        errors[key] = empty_field_error;\r\n      }\r\n    }\r\n  }\r\n  if (input_birthDate >= today) {\r\n    errors.birthDate = wrong_date_error;\r\n  }\r\n  if (!validatePostalCode(values.resPostalCode)) {\r\n    errors.resPostalCode = wrong_postalcode_error;\r\n  }\r\n  if (input_FirstMemberBirthDate >= today) {\r\n    errors.FirstMemberBirthDate = wrong_date_error;\r\n  }\r\n  if (!values.FirstMemberBirthDate) {\r\n    errors.FirstMemberBirthDate = \"\";\r\n  }\r\n  if (input_SecondMemberBirthDate >= today) {\r\n    errors.SecondMemberBirthDate = wrong_date_error;\r\n  }\r\n  if (!values.SecondMemberBirthDate) {\r\n    errors.SecondMemberBirthDate = \"\";\r\n  }\r\n  if (input_ThirdMemberBirthDate >= today) {\r\n    errors.ThirdMemberBirthDate = wrong_date_error;\r\n  }\r\n  if (!values.ThirdMemberBirthDate) {\r\n    errors.ThirdMemberBirthDate = \"\";\r\n  }\r\n  if (input_lastDateInPoland >= today) {\r\n    errors.lastDateInPoland = wrong_date_error;\r\n  }\r\n  if (!values.lastDateInPoland) {\r\n    errors.lastDateInPoland = \"\";\r\n  }\r\n  if (!validateLength(values.length)) {\r\n    errors.length = wrong_number_values_error;\r\n  }\r\n  if (!values.length) {\r\n    errors.length = empty_field_error;\r\n  }\r\n  if (values.pesel) {\r\n    if (!validatePESEL(values.pesel)) {\r\n      errors.pesel = \"Prodaj poprawny numer PESEL\";\r\n    }\r\n  }\r\n  if (!validateNumbers(values.resHomeNumber)) {\r\n    errors.resHomeNumber = wrong_number_values_error;\r\n  }\r\n  if (!validateNumbers(values.resApartmentNumber)) {\r\n    errors.resApartmentNumber = wrong_number_values_error;\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}